Physics2D.Net
NEXT VERSION:
changed: inlined code in the Body.UpdateVelocity method.

AdvanceMath
NEXT VERSION:
Added: a new define: UNSAFE
Changed: made it so all code that has or uses unsafe code blocks is inside "#if UNSAFE #endif" statements. 

Physics2D.Net
1.2.0.0:
Changed: made the Joints Implement an interface specific to the solver.
Changed: Implemented the Solver from Super Split Box2D. This changed the joints quite a bit but basically left everything else alone.
Changed: Made it so a joint will be removed when one of the bodies it is attached to is removed.
Added: JointCount property to Body.
Changed: Cleaned up some code in the Sequential Impulse Solver.
Added: IContact and ICollisionInfo for use with CollisionEventArgs
Changed: the solvers and all classes involved to added contact info to the collided event.
Moved: BroadPhasedCollisionDetector into the Detectors namespace.
Moved: CollsionSolver into the Solvers namespace.
Changed: Made the Lifespan class impliment IDuplicateable
Added: ImplicitCastCollection to be used by the Solver to convert Contacts to IContact without making a copy of the contacts.
Changed: CollisionEventArgs and ICollisionInfo to return a ReadOnlyCollection of Contacts not an array.
Added: CollectionEventArgs class.
Added: events to PhysicsEngine for when objects are added to or removed from it.
Changed: the logic of removing and adding so they will “short circuit” so to not add empty lists. 
Removed: the PhysicsConstants class and moved its contents to PhysicsHelper.
Added: a IsPending property to IPhysicsEntity,
changed: Made it so it will throw an error in the add method if a object is added more then once. 
Added: A Transform Method to ALVector2D.
Changed: Made the Body.ApplyMatrix transform the Position ALVector2D,then recreate the matrix to apply to the shape.
Fixed: MakeCentroidOrigin.
Added: BoundingBox2DShape.
Changed: Made the distance grid use Jagged arrays.
Renamed: SITag to SequentialImpulsesTag
Moved: the SequentialImpulsesTag outside of the SequentialImpulsesSolver
Removed: SolverVelocity from PhysicsState.
Added: biasImpulse to SequentialImpulsesTag.
Added: tag1 and tag2 to HidgeJoint.
Added: Pending Event to IPhysicsEntity
fixed: a bug that trying to add an item to the engine in a AddRange method that has already been added would corrupt the state.
fixed: a few problems that made the PhysicsEngine class not threadsafe.
Added: IsAdded property to IPhysicsEntity.
changed: made it so the bodies effected by a joint must be added to the engine before the joint.
Changed: made it so it throws ArgumentNullExceptions when you pass a null object to the Add or AddRange methods in PhysicsEngine.
Added: IJoint interface.
Added: RemovedEventArgs.

AdvanceMath:
1.5.0.0: 
Added: Lerp to the matrix structs.
changed: only a few things fxCop pointed out.
added: a few of the parameter checking FxCop complained about.
fixed: a potetial bug with the pass by reference version of Vector2D.ZCross, GetRightHandNormal and GetLeftHandNormal methods
change: some method names to be closer to XNAs math classes. 
added: methods for adding and subtracting matrices and vectors of different size.

Physics2D.Net
1.1.0.0:
changed: made it so the line's thickness is actaully its thickness so the lines are no longer twice as thick as the parameter passed.
removed: the add methods to collision detector and solver since they will only use addRange now.
changed: how objects are added now they are always added to a pending queue first then truly added to the engine on a call to update. 
Changed: made it so 2 bodies with infinite mass cannot collide.
changed: made the StateChanged event get generated on calls to apply matrix or in PhysicsEngine.Update.
added: The event Body.ShapedChanged.
renamed: the event Body.Collision to Collided.
renamed: the event Body.NewState to StateChanged
changed: the Matrix2D struct to have the three versions of each operator. 
changed: the Sequential Impulese Solver to be in the Solvers Namespace and all classes used by it to be in it. 
changed: it so the angular position will be bounded between -2PI and 2PI with every parameterless call to apply matrix.
fixed: a bug that really slowed the UpdatePosition if the angular position's absolute value was very large.
added: BroadPhaseDetectionOnly property to Body
fixed: a bug with the wrapped collection that could allow access to a non locked Enumerator.
Changed: all the collection wrappers names from *wrapper to Wrapped* becuase of fxCop.
changed: a few properties and names FxCop complained about.
added: allot of the parameter checking FxCop complained about.
fixed: In theory a bug when a Body is set to Expired in the middle of a call to RemoveExpired and when a object is re-added in its removed event. causing multiple nodes and wrappers for the Body in Sweep and prune.(this bug was/is hard to generate)
Added: the newer versions of The Sequential Impuleses Solver that impliments the newest Algorithms from Box2D
changed: the math in the joints and arbiters to look better using the PhysicsHelper.
Added: a static PhysicsHelper class and methods for impulse, relative velocity calcualtions and other physics related math. 
Added: SolversTag and DetectorsTag properties to Body
Added: A SolversVelocity value to PhysicsState.(this is the bias velocity for the newer solver)
fixed: the distance grid so that it will no longer throw a index out of bounds exception.
Changed: The Sweep and prune to store LinkList nodes in the wrapper instead of searching for them when its time to remove them.
changed: The Linked list in Sweep and prune to store Bodies instead of Nodes.
Removed: junk code from the Polygon.CreateRectangle method.
Changed: the SequentialImpulsesSolver.Solve method to copy the Arbiters into an array before running apply and preApply


AdvanceMath:
1.4.0.0: 
Added pass by reference versions of most methods.
Removed all copyrighted code for re-licensing as MIT except for the Quaternion. 
Re-licensed as MIT.

Physics2D.Net
1.0.0.0:
Completely new, See release notes for explanation.